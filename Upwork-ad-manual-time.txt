Code for adding manual time

Save button:

<div class="btn-row">
<button class="btn btn-link" data-ng-click="cancel()">Cancel </button>
<button class="btn btn-primary" data-ng-click="save()" data-ng-disabled="addForm.$invalid || !activityMemoCheck() || savingInProcess" disabled="disabled">Save</button>
</div>

---------------------------------------------------------------------------------------
Entering time:

<div class="btn-group dropdown" eo-dropdown="" is-open="false"> 
<button class="btn btn-default dropdown-toggle" type="button" eo-dropdown-toggle="" ng-disabled="ngDisabled" aria-haspopup="true" aria-expanded="false"> 
<span class="eo-select-label ellipsis" ng-bind="label">12:10am </span> 
<span aria-hidden="true" class="caret glyphicon air-icon-arrow-expand"> </span>
<span aria-hidden="true" class="caret glyphicon air-icon-close"></span> 
</button> 
<ul class="eo-dropdown-menu" role="menu" eo-dropdown-menu="" eo-dropdown-menu-aliases="timepickers.aliases"> 
<!---->

# The ng-click directive tells AngularJS what to do when an HTML element is clicked.
# Example: <button ng-click="count = count + 1" ng-init="count=0">OK</button>

<li ng-repeat="option in selectOptions track by option.id" class="" style=""> 
    <a href="javascript:" ng-class="{disabled: option.disabled, active: option.isSelected}" ng-bind-html="option.label" 
    ng-click="selectionChanged(option.id)">12:00am
    </a> 
</li>
<!---->


<li ng-repeat="option in selectOptions track by option.id" class=""> 
<a href="javascript:" ng-class="{disabled: option.disabled, active: option.isSelected}" ng-bind-html="option.label" 
    ng-click="selectionChanged(option.id)">11:50 PM
</a> 
</li>
<!---->

---------------------------------------------------------------------------------------


How to use selenium to call angular function (ng-click)
 am trying to call a angular ng-click using selenium. This question is based on this javascript:

<span class="col" ng-click="getHope(1,'pray','smile')">100%</span>

To call it:
driver.find_element_by_xpath("//span[@ng-click=\"getHope(1,'pray','smile')\"]").click()
---------------------------------------------------------------------------------------


Bootstrap dropdown isn't like traditional dropdowns as it doesn't use <select> tags, rather it uses <ul> and <li> tags to make a dropdown. So to handle bootstrap dropdown, you need to use findElements() method which will return all the options of the dropdown. Following code snippet shows how to handle a bootstrap dropdown:
   driver.findElement(By.className("icon-Home-page-humburger-menu-01â€‹")).click();

      Thread.sleep(2000);

      //Dropdown items are coming in <a> tag so below xpath will get all elements and findElements will return list of WebElements

      List<WebElement> list = driver.findElementsByXPath("//ul[@id='hiddencat']//li/a");

       for (WebElement element : list)
       {
          System.out.println("Values " + element.getAttribute("innerHTML"));

       }

Might work:
ropdown = browser.find_element_by_id('surface')
for option in dropdown.find_elements_by_tag_name('option'):
    if option.text == 'Hard':
        option.click()
        break

Also might work:
from selenium.webdriver.common.keys import Keys

dropdown = browser.find_element_by_id('surface')
dropdown.send_keys('Hard')
dropdown.send_keys(Keys.ENTER)